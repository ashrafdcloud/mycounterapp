{"version":3,"sources":["components/counter/counter.jsx","ItemDetails.js","App.jsx","reportWebVitals.js","index.jsx"],"names":["Counter","add","sub","double","React","useState","counter","setCounter","handleCounter","value","className","onClick","ItemDetails","props","navigate","useNavigate","id","useParams","itemId","parseInt","item","jsonData","employees","find","employee","firstName","lastName","salary","MainTable","map","to","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oqEAqBeA,EAnBD,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,IAAKC,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,OACtB,EAA8BC,IAAMC,SAAS,GAA7C,mBAAOC,EAAP,KAAgBC,EAAhB,KACIC,EAAgB,SAACC,GACjBF,EAAWD,EAAUG,IAEzB,OACI,mCACI,sBAAKC,UAAU,mCAAf,UACI,oBAAIA,UAAU,+BAAd,wBACA,qBAAKA,UAAU,gDAAf,SAAgEJ,IAChE,wBAAQI,UAAU,6CAA6CC,QAAS,kBAAMH,EAAcP,IAA5F,uBACA,wBAAQS,UAAU,4CAA4CC,QAAS,kBAAMH,EAAcN,IAA3F,uBACA,wBAAQQ,UAAU,4CAA4CC,QAAS,kBAAMH,EAAcL,IAA3F,0BCoBDS,MA5Bf,YAAgC,EAATC,MAAU,IACvBC,EAAWC,cAMZC,EAAOC,cAAPD,GACFE,EAASC,SAASH,GAEjBI,EAAOC,EAASC,UAAUC,MAAK,SAAAC,GAAQ,OAAIA,EAASR,KAAOE,KAEjE,OAAKE,EAKH,sBAAKV,UAAU,cAAf,UACI,wBAAQC,QAfS,WACnBG,GAAU,IAcR,kBACF,qCAAQM,EAAKJ,MACb,6CAAgBI,EAAKK,aACrB,4CAAeL,EAAKM,YACpB,yCAAYN,EAAKO,aATZ,mDCCX,SAASC,IACP,OACE,wBAAOlB,UAAU,aAAaM,GAAG,YAAjC,UAEE,gCACE,+BACE,oCACA,4CACA,2CACA,8CAIJ,gCACGK,EAASC,UAAUO,KAAI,SAAAT,GAAI,OAC1B,+BACE,6BAAKA,EAAKJ,KACV,6BAAKI,EAAKK,YACV,6BAAKL,EAAKM,WACV,+BACE,cAAC,IAAD,CAAMI,GAAE,gBAAWV,EAAKJ,IAAxB,qBADF,SAJOI,EAAKJ,YAcTe,MA3Cf,WACE,OACE,cAAC,IAAD,UACE,gCACE,cAAC,EAAD,CAAS7B,KAAM,EAAGD,IAAK,EAAGE,OAAQ,IAClC,eAAC,IAAD,WACE,cAAC,IAAD,CAAO6B,KAAK,IAAIC,QAAS,cAACL,EAAD,MACzB,cAAC,IAAD,CAAOI,KAAK,YAAYC,QAAS,cAAC,EAAD,eCD5BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.60b8990e.chunk.js","sourcesContent":["import React from \"react\";\n\nlet Counter = ({add, sub, double}) => {\n    const [counter, setCounter] = React.useState(0);\n    let handleCounter = (value) => {\n        setCounter(counter + value)\n    }\n    return (\n        <>\n            <div className=\"container-fluid text-center mt-5\">\n                <h1 className=\"text-uppercase text-info h1 \">My Counter</h1>\n                <div className=\"text-success display-3 my-4  font-weight-bold\">{counter}</div>\n                <button className=\"btn btn-primary mx-2 border border-success\" onClick={() => handleCounter(add)}>Increment</button>\n                <button className=\"btn btn-danger mx-2 border border-primary\" onClick={() => handleCounter(sub)}>Decrement</button>\n                <button className=\"btn btn-warning mx-2 border border-danger\" onClick={() => handleCounter(double)}>Double</button>\n            </div>\n            \n        </>\n    );\n}\n\nexport default Counter;","// ItemDetails.js\r\nimport React from 'react';\r\nimport jsonData from './data.json';\r\nimport { useParams, useNavigate  } from 'react-router-dom';\r\n\r\n\r\nfunction ItemDetails({ props }) {\r\n    const navigate = useNavigate(); // Use useNavigate to access navigation function\r\n\r\n    const handleGoBack = () => {\r\n      navigate(-1); // Use navigate with -1 to go back\r\n    };\r\n // const itemId = parseInt(match.params.id);\r\n const { id } = useParams(); \r\n const itemId = parseInt(id);\r\n \r\n  const item = jsonData.employees.find(employee => employee.id === itemId);\r\n\r\n  if (!item) {\r\n    return <div>Item not found.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className='datas-table'>\r\n        <button onClick={handleGoBack}>Back</button>\r\n      <p>ID: {item.id}</p>\r\n      <p>First Name: {item.firstName}</p>\r\n      <p>Last Name: {item.lastName}</p>\r\n      <p>Salary: {item.salary}</p>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ItemDetails;","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport jsonData from './data.json';\nimport Counter from \"./components/counter/counter\";\nimport ItemDetails from './ItemDetails';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Counter sub={-1} add={1} double={2} />\n        <Routes>\n          <Route path=\"/\" element={<MainTable />} />\n          <Route path=\"/item/:id\" element={<ItemDetails />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nfunction MainTable() {\n  return (\n    <table className=\"data-table\" id=\"customers\">\n      {/* Table Header */}\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>First Name</th>\n          <th>Last Name</th>\n          <td>Actions</td>\n        </tr>\n      </thead>\n      {/* Table Body */}\n      <tbody>\n        {jsonData.employees.map(item => (\n          <tr key={item.id}>\n            <td>{item.id}</td>\n            <td>{item.firstName}</td>\n            <td>{item.lastName}</td>\n            <td>\n              <Link to={`/item/${item.id}`}>Details</Link> {/* Use Link component instead of <a> tag */}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}